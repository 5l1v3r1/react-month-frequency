import t,{Component as e}from"react";import r from"styled-components";var n=Object.freeze(["\n  height: ","px;\n  width: ","px;\n  margin: 2px;\n  opacity: ",";\n  background-color: ",";\n  border-radius: 1px;\n"]),o=Object.freeze(["\n  height: 65px;\n  width: 85px;\n  display: flex;\n  flex-wrap: wrap;\n  box-sizing: border-box;\n  align-content: flex-start;\n"]),i=Object.freeze(["\n  color: ",";\n  font-size: ","px;\n  margin-bottom: 2px;\n"]),a=Object.freeze(["\n  height: ","px;\n  width: ","px;\n  padding: 5px;\n"]),c=Object.freeze(["\n  width: ","px;\n  display: flex;\n  flex-direction: row;\n  background-color: ",";\n  border-radius: ","px;\n  padding: 15px;\n  box-sizing: border-box;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-content: flex-start;\n"]),u=r.div(c,function(t){return t.width},function(t){return t.backgroundColor},function(t){return t.radius}),f=r.div(a,function(t){return t.height},function(t){return t.width}),p=r.div(i,function(t){return t.color},function(t){return t.fontSize}),d=r.div(o),s=r.div(n,function(t){return t.height},function(t){return t.width},function(t){return t.opacity},function(t){return t.color}),l=["January","February","March","April","May","June","July","August","September","October","November","December"],h=[31,28,31,30,31,30,31,31,30,31,30,31],m={style:{container:{width:470,backgroundColor:"#161f29",radius:15},monthBlockSize:{height:80,width:95},daySquare:{height:8,width:8,color:"white"},monthTitle:{color:"white",fontSize:10}},colorThresholds:[{from:0,to:1,opacity:.1},{from:1,to:3,opacity:.2},{from:3,to:5,opacity:.4},{from:5,to:7,opacity:.6},{from:7,to:9,opacity:.8},{from:9,opacity:1}]};export default(function(e){function r(){for(var r=this,n=[],o=arguments.length;o--;)n[o]=arguments[o];e.apply(this,n),this.mergedConfig=function(){return Object.assign({},m,r.props.config)},this.getOpacity=function(t){var e=r.mergedConfig().colorThresholds.filter(function(e){return t>e.from&&t<=e.to})[0];return e?e.opacity:.1},this.renderEmptyBlocks=function(e,n){for(var o=[],i=0;i<h[e];i++)o.push(t.createElement(s,Object.assign({},n.style.daySquare,{key:i,opacity:r.getOpacity(0)})));return o},this.validate=function(){if(!(r.props.data instanceof Array))throw new Error("Data provided must be an array");r.props.data.forEach(function(t){if(!t.date||!t.count)throw new Error("Ensure data is formatted correctly [{date: String, count: Number}]");if("string"!=typeof t.date)throw new Error("Dates must be provided in string format");if("number"!=typeof t.count)throw new Error("Counts must be provided in number format")})},this.formatData=function(){r.validate();var t={};return r.props.data.forEach(function(e){var r=e.date.split("/"),n=r[2],o=parseInt(r[1],10);t[o]?t[o][n-1]=e.count:(t[o]=[],t[o][n-1]=e.count)}),Object.keys(t).forEach(function(e){for(var r=0;r<h[e-1];r++)t[e][r]||(t[e][r]=0)}),t},this.renderData=function(e){var n=r.formatData();return l.map(function(o,i){return n[i]?t.createElement(f,{key:i},t.createElement(p,e.style.monthTitle," ",o),t.createElement(d,null,n[i].map(function(n,o){return t.createElement(s,Object.assign({},e.style.daySquare,{key:o,opacity:r.getOpacity(n)}))}))):t.createElement(f,Object.assign({},e.style.monthBlockSize,{key:i}),t.createElement(p,e.style.monthTitle," ",o),t.createElement(d,null,r.renderEmptyBlocks(i,e)))})}}return e&&(r.__proto__=e),(r.prototype=Object.create(e&&e.prototype)).constructor=r,r.prototype.render=function(){var e=this.mergedConfig();return t.createElement(u,e.style.container,this.renderData(e))},r}(e));
//# sourceMappingURL=index.mjs.map
